<fragment>
	<authentication-managed-identity resource="{{cosmosdb-scope}}" output-token-variable-name="msi-access-token" ignore-error="false" client-id="{{user-assigned-identity-client-id}}" />
	<send-one-way-request mode="new">
		<set-url>{{cosmosdb-document-endpoint}}</set-url>
		<set-method>POST</set-method>
		<set-header name="Authorization" exists-action="override">
			<value>@("type=aad&amp;ver=1.0&amp;sig=" + context.Variables["msi-access-token"])</value>
		</set-header>
		<set-header name="x-ms-version" exists-action="override">
			<value>2018-12-31</value>
		</set-header>
		<set-header name="x-ms-documentdb-partitionkey" exists-action="override">
			<value>
                @{
                    var result = $"[\"{context.Variables["partition-key"]}\"]";
                    return result;
                }
            </value>
		</set-header>
		<set-header name="Content-Type" exists-action="override">
			<value>application/json</value>
		</set-header>
		<set-header name="x-correlation-id" exists-action="override">
			<value>@((string)context.Variables["correlation-id"])</value>
		</set-header>
		<set-body>@{
            var result = JObject.Parse(context.Response.Body.As&lt;string&gt;(preserveContent: true));

            var returnObject = new JObject(
                new JProperty("id", context.Variables["app-id"] + "|" + context.RequestId + "|outbound"),
                new JProperty("pk", context.Variables["partition-key"]),
                new JProperty("requestId", context.RequestId),
                new JProperty("timestamp", context.Timestamp),
                new JProperty("ocpApimSubscriptionKey", context.Subscription.Key),
                new JProperty("direction", "outbound"),
                new JProperty("xCorrelationId", context.Variables["correlation-id"]),
                new JProperty("appId", context.Variables["app-id"]),
                new JProperty("backendId", context.Variables["backend-id"]),
                new JProperty("body", result)
            );

            if(context.Response.StatusCode &lt; 400) {
                returnObject.Add(new JProperty("promptTokens", result["usage"]["prompt_tokens"]));
                returnObject.Add(new JProperty("totalTokens", result["usage"]["total_tokens"]));

                //embeddings won't contain these properties
                if(context.Request.OriginalUrl.Path.EndsWith("chat/completions")) {
                    returnObject.Add(new JProperty("completionTokens", result["usage"]["completion_tokens"]));
                    returnObject.Add(new JProperty("model", result["model"]));
                }
            }

            return returnObject.ToString();
        }
        </set-body>
	</send-one-way-request>
</fragment>