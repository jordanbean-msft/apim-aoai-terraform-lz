<fragment>
	<log-to-eventhub logger-id="event-hub-logger">
        @{
            var returnObject = new JObject();

            if(context.Variables.TryGetValue("app-id", out var appId)) {
                returnObject.Add(new JProperty("id", appId + "|" + context.RequestId + "|outbound"));
            }

            if(context.Variables.TryGetValue("partition-key", out var pk)) {
                returnObject.Add(new JProperty("pk", pk));
            }

            returnObject.Add(new JProperty("requestId", context.RequestId));
            returnObject.Add(new JProperty("timestamp", context.Timestamp));
            returnObject.Add(new JProperty("ocpApimSubscriptionKey", context.Subscription.Key));
            returnObject.Add(new JProperty("direction", "outbound"));

            if(context.Variables.TryGetValue("correlation-id", out var correlationId)) {
                returnObject.Add(new JProperty("xCorrelationId", correlationId));
            }

            returnObject.Add(new JProperty("appId", appId));

            if(context.Variables.TryGetValue("backend-id", out var backendId)) {
                returnObject.Add(new JProperty("backendId", backendId));
            }

            if(context.Variables.TryGetValue("isStreaming", out var isStreaming)) {
                returnObject.Add(new JProperty("isStreaming", isStreaming));
            }

            if((bool)context.Variables["isStreaming"] &amp;&amp; context.Response.Headers.ContainsKey("ms-azureml-model-error-statuscode")) {
                //log the body if there is a model error since this breaks the stream anyway
                var result = JObject.Parse(context.Response.Body.As&lt;string&gt;(preserveContent: true));
                returnObject.Add(new JProperty("body", result));
            }

            if(!(bool)context.Variables["isStreaming"]) {
                var result = JObject.Parse(context.Response.Body.As&lt;string&gt;(preserveContent: true));
                
                //remove the actual embedding from the logged message
                if(context.Request.OriginalUrl.Path.EndsWith("/embeddings")) {
                    foreach(var data in result["data"]) {
                        data["embedding"]?.Parent?.Remove();
                    }
                }

                if(context.Variables.TryGetValue("model", out var model)) {
                    returnObject.Add(new JProperty("model", model));
                }

                if(context.Response.StatusCode &lt; 400) {
                    if(result.TryGetValue("usage", out var usage)) {
                        returnObject.Add(new JProperty("promptTokens", result["usage"]["prompt_tokens"]));
                        returnObject.Add(new JProperty("totalTokens", result["usage"]["total_tokens"]));

                        //embeddings won't contain these properties
                        if(context.Request.OriginalUrl.Path.EndsWith("/completions")) {
                            returnObject.Add(new JProperty("completionTokens", result["usage"]["completion_tokens"]));
                        }
                    }
                }
                
                returnObject.Add(new JProperty("body", result));
            }

            return returnObject.ToString();
        }
    </log-to-eventhub>
</fragment>